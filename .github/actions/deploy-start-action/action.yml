name: "Deployment start hook"

inputs:
  package-name:
    required: true
  slack-webhook:
    required: true

outputs:
  commit-sha:
    description: "Commit SHA"
    value: ${{ steps.commit-sha.outputs.sha_short }}
  release-version:
    description: "Release version"
    value: ${{ steps.release-tag.outputs.version }}
  # release-channel:
  #   description: "Release channel"
  #   value: ${{ steps.release-tag.outputs.version }}

runs:
  using: "composite"
  steps:
    # - name: Extract commit SHA version
    #   id: commit-sha
    #   shell: bash
    #   run: |
    #     echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    # - name: Extract release tag version
    #   id: release-tag
    #   uses: olegtarasov/get-tag@v2.1.2
    #   with:
    #     tagRegex: "(?<package>.*)-(?<version>.*)"
    #     tagRegexGroup: 2

    - name: Extract release channel
      shell: bash
      run: |
        git --no-pager log -n 1 --pretty=%d HEAD
        sha_short=$(git rev-parse --short HEAD)

        ref_tag=${{ github.event.ref }}
        ref_branch=${{ github.event.base_ref }}

        tag=${ref_tag#refs/tags/}
        branch=${ref_branch#refs/heads/}
        version=$(echo "$tag" | awk -F "${{ inputs.package-name }}-" '{print $2}')

        if [ "$branch" = "${{ github.event.repository.master_branch }}" ]; then
          channel=stable
          # channel=latest
        elif [ "next" = "${"$(echo "$tag" | awk -F "-" '{print $3}')"%.*}" ]; then
          channel=next
        else
          echo "couldn't resolve release channel based on the pushed tag"
          echo "use <package>-v<X.Y.Z>          for "stable" channel"
          echo "use <package>-v<X.Y.Z>-next.<I> for "next"   channel"
          exit 1
        fi

        echo "ref: $ref"
        echo "branch: $branch"
        echo "tag: $tag"
        echo "version: $version"
        echo "channel: $channel"

        # echo "inputs: ${{ toJSON(inputs) }}"
        # echo "env: ${{ env.GITHUB_REF_NAME }} ${{ env.GITHUB_REF_NAME }}"
        # echo "github: ${{ toJSON(github) }}"

        # IFS='-' read -ra strarr <<< "$tag"
        # echo "ref_tag: ${{ github.ref }}"
        # echo "ref_branch: ${{ github.event.base_ref }}"
        # echo "version: ${{ steps.release-tag.outputs.version }}"
        # echo "${{ steps.ref.outputs.version }}"
        # echo "${{ steps.ref.outputs.channel }}"

    # - name: Post Slack build message
    #   id: slack
    #   uses: slackapi/slack-github-action@v1.23.0
    #   with:
    #     payload: |
    #       {
    #         "text": "${{ inputs.package-name }} v${{ steps.release-tag.outputs.version }} is now being deployed"
    #       }
    #   env:
    #     SLACK_WEBHOOK_URL: ${{ inputs.slack-webhook }}
    #     SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

    # - name: Create local bin dir
    #   shell: bash
    #   run: |
    #     mkdir -p $HOME/.local/bin
    #     echo "LOCAL_BIN=$HOME/.local/bin" >> $GITHUB_ENV
    #     echo "$HOME/.local/bin" >> $GITHUB_PATH

    # - uses: robinraju/release-downloader@v1.5
    #   with:
    #     repository: 'jsontypedef/json-typedef-codegen'
    #     latest: true
    #     fileName: 'x86_64-unknown-linux-gnu.zip'

    # - name: Append jtd-codegen to PATH # * https://www.scivision.dev/github-actions-path-append/
    #   shell: bash
    #   run: |
    #     unzip -d $LOCAL_BIN x86_64-unknown-linux-gnu.zip
